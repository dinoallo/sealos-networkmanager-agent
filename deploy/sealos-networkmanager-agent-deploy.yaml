apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: sealos-nm-agent
    app.kubernetes.io/part-of: sealos-nm
    k8s-app: sealos-nm-agent
  name: sealos-nm-agent
  namespace: sealos-networkmanager-system
spec:
  selector:
    matchLabels:
      k8s-app: sealos-nm-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sealos-nm-agent
        app.kubernetes.io/part-of: sealos-nm
        k8s-app: sealos-nm-agent
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - image: docker.io/dinoallo/sealos-networkmanager-agent:dev
        imagePullPolicy: Always
        name: sealos-nm-agent
        resources: {}
        securityContext:
          privileged: true
          runAsUser: 0
          runAsGroup: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      dnsPolicy: ClusterFirst
      hostNetwork: true
      volumes:
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: Directory
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 2
    type: RollingUpdate
